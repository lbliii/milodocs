/* Enhanced Animations - Component state-driven animations
 * These animations respond to the new component states we're setting
 */

/* ========================================
   Loading States - Visual Feedback
   ======================================== */

/* Component loading animation */
.component[data-component-state="loading"],
.component[data-component-state="initializing"] {
  position: relative;
  opacity: 0.7;
  pointer-events: none;
}

.component[data-component-state="loading"]:after,
.component[data-component-state="initializing"]:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid var(--semantic-color-brand, #76b900);
  border-radius: 50%;
  border-top-color: transparent;
  animation: component-spin 1s linear infinite;
  z-index: 1000;
}

/* Theme toggle specific loading */
#darkModeToggle[data-component-state="toggling"] {
  transform: scale(0.95);
  transition: transform 0.15s ease;
}

/* ========================================
   Sidebar State Animations
   ======================================== */

/* Sidebar opening animation enhancement */
.sidebar-container[data-component-state="opening"] {
  box-shadow: 0 0 20px rgba(var(--color-brand-rgb, 118, 185, 0), 0.2);
}

.sidebar-container[data-component-state="open"] {
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.sidebar-container[data-component-state="closing"] {
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

/* ========================================
   Notebook State Animations
   ======================================== */

/* Notebook initialization */
.notebook[data-component-state="initializing"] {
  opacity: 0.5;
  transform: translateY(10px);
  transition: all 0.3s ease;
}

.notebook[data-component-state="ready"] {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.3s ease;
}

/* Notebook cells get enhanced hover when notebook is ready */
.notebook[data-component-state="ready"] .notebook-cell:hover {
  transform: translateX(4px);
  box-shadow: 0 2px 8px rgba(var(--color-brand-rgb, 118, 185, 0), 0.1);
  transition: all 0.2s ease;
}

/* ========================================
   Interactive Enhancements
   ======================================== */



/* Enhanced hover states for ready components */
.component[data-component-state="ready"]:hover {
  transform: translateY(-1px);
  transition: transform 0.2s ease;
}

/* ========================================
   Performance-Optimized Animations
   ======================================== */

/* Use CSS containment for better performance */
.component[data-component-state="animating"] {
  contain: layout style;
  will-change: transform, opacity;
}

/* Reset performance hints when not animating */
.component:not([data-component-state="animating"]) {
  will-change: auto;
}

/* ========================================
   Keyframe Animations
   ======================================== */

@keyframes component-spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}



/* ========================================
   Responsive Animations
   ======================================== */

/* Reduce animations on mobile and for users who prefer reduced motion */
@media (max-width: 768px), (prefers-reduced-motion: reduce) {
  .component[data-component-state="loading"]:after,
  .component[data-component-state="initializing"]:after {
    animation-duration: 2s; /* Slower on mobile */
  }
  

  
  .component[data-component-state="ready"]:hover {
    transform: none; /* No hover animations */
  }
}